"""Create users table

Revision ID: 8ae6f504f994
Revises: 45df810cc69d
Create Date: 2025-05-28 14:00:45.748339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = '8ae6f504f994'
down_revision: Union[str, None] = '45df810cc69d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('identity_provider', sa.String(length=50), nullable=False, comment="Provider type ('entra_id', 'google', etc.)"),
    sa.Column('identity_provider_id', sa.String(length=255), nullable=False, comment='Unique identifier from the provider'),
    sa.Column('email', sa.String(length=255), nullable=False, comment="User's email address"),
    sa.Column('display_name', sa.String(length=255), nullable=False, comment="User's display name"),
    sa.Column('last_login_at', sa.DateTime(), nullable=True, comment='Most recent login timestamp'),
    sa.Column('login_count', sa.Integer(), nullable=False, comment='Count of user logins'),
    sa.Column('total_usage_minutes', sa.Integer(), nullable=False, comment='Cumulative time spent using Quodsi'),
    sa.Column('last_session_start', sa.DateTime(), nullable=True, comment='When current/last session started'),
    sa.Column('last_active_at', sa.DateTime(), nullable=True, comment='Last user activity timestamp'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='User status (active, invited, suspended)'),
    sa.Column('user_metadata', sa.String(length=4000), nullable=True, comment='Additional profile information (JSON data)'),
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('index_id', sa.BigInteger(), sa.Identity(always=False, start=1, increment=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Record last update timestamp'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('tenant_id', mssql.UNIQUEIDENTIFIER(), nullable=False, comment='Multi-tenant isolation key'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identity_provider', 'identity_provider_id', name='uq_users_identity_provider'),
    sa.UniqueConstraint('index_id'),
    sa.UniqueConstraint('tenant_id', 'email', name='uq_users_tenant_email')
    )
    op.create_index('ix_users_index_id', 'users', ['index_id'], unique=True)
    op.create_index(op.f('ix_users_is_deleted'), 'users', ['is_deleted'], unique=False)
    op.create_index('ix_users_tenant_active', 'users', ['tenant_id', 'is_deleted', 'index_id'], unique=False, mssql_where=sa.text('is_deleted = 0'))
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_index('ix_users_tenant_id_lookup', 'users', ['tenant_id', 'id'], unique=False, mssql_where=sa.text('is_deleted = 0'))
    op.drop_index(op.f('ix_tenants_active'), table_name='tenants', mssql_where='([is_deleted]=(0))')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_tenants_active'), 'tenants', ['is_deleted'], unique=False, mssql_where='([is_deleted]=(0))')
    op.drop_index('ix_users_tenant_id_lookup', table_name='users', mssql_where=sa.text('is_deleted = 0'))
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index('ix_users_tenant_active', table_name='users', mssql_where=sa.text('is_deleted = 0'))
    op.drop_index(op.f('ix_users_is_deleted'), table_name='users')
    op.drop_index('ix_users_index_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###