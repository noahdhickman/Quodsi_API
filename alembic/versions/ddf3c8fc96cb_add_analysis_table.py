"""Add Analysis Table

Revision ID: ddf3c8fc96cb
Revises: fce9296fa920
Create Date: 2025-06-02 22:29:38.655496

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = 'ddf3c8fc96cb'
down_revision: Union[str, None] = 'fce9296fa920'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analyses',
    sa.Column('name', sa.NVARCHAR(length=255), nullable=False, comment='Name of the analysis study'),
    sa.Column('description', sa.NVARCHAR(), nullable=True, comment='Description of the analysis study'),
    sa.Column('model_id', mssql.UNIQUEIDENTIFIER(), nullable=False, comment='Parent model this analysis belongs to'),
    sa.Column('default_reps', sa.Integer(), nullable=False, comment='Default number of replications for child scenarios'),
    sa.Column('default_time_period', sa.NVARCHAR(length=50), nullable=False, comment='Default time period for child scenarios'),
    sa.Column('created_by_user_id', mssql.UNIQUEIDENTIFIER(), nullable=False, comment='User who created the analysis'),
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('index_id', sa.BigInteger(), sa.Identity(always=False, start=1, increment=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Record last update timestamp'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='Soft delete flag'),
    sa.Column('tenant_id', mssql.UNIQUEIDENTIFIER(), nullable=False, comment='Multi-tenant isolation key'),
    sa.CheckConstraint("default_time_period IN ('hourly', 'daily', 'monthly')", name='ck_analyses_default_time_period'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', mssql_clustered=False),
    sa.UniqueConstraint('index_id'),
    sa.UniqueConstraint('tenant_id', 'model_id', 'name', name='uq_analyses_tenant_model_name')
    )
    op.create_index('ix_analyses_index_id', 'analyses', ['index_id'], unique=True, mssql_clustered=True)
    op.create_index(op.f('ix_analyses_is_deleted'), 'analyses', ['is_deleted'], unique=False)
    op.create_index('ix_analyses_tenant_active', 'analyses', ['tenant_id', 'is_deleted', 'index_id'], unique=False)
    op.create_index('ix_analyses_tenant_created_by', 'analyses', ['tenant_id', 'created_by_user_id'], unique=False)
    op.create_index(op.f('ix_analyses_tenant_id'), 'analyses', ['tenant_id'], unique=False)
    op.create_index('ix_analyses_tenant_id_lookup', 'analyses', ['tenant_id', 'id'], unique=False)
    op.create_index('ix_analyses_tenant_model', 'analyses', ['tenant_id', 'model_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_analyses_tenant_model', table_name='analyses')
    op.drop_index('ix_analyses_tenant_id_lookup', table_name='analyses')
    op.drop_index(op.f('ix_analyses_tenant_id'), table_name='analyses')
    op.drop_index('ix_analyses_tenant_created_by', table_name='analyses')
    op.drop_index('ix_analyses_tenant_active', table_name='analyses')
    op.drop_index(op.f('ix_analyses_is_deleted'), table_name='analyses')
    op.drop_index('ix_analyses_index_id', table_name='analyses', mssql_clustered=True)
    op.drop_table('analyses')
    # ### end Alembic commands ###
